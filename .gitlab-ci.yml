variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install --no-install-recommends -q -y"

pre-commit:
  image:
    name: alpine:latest
  script:
    - date
    - apk add --no-cache bash gcc git libc-dev npm py3-pip python3-dev
    - pip3 install pre-commit
    - pre-commit --version
    - pre-commit run --all-files

test_alpine:
  image:
    name: alpine:latest
  rules:
    - changes:
      - add-on/*
      - .gitlab-ci.yml
      - src2ndest
      - test/*
  script:
    - date
    # install dependencies:
    #   * bash for the script
    #   * openssh to run some tests
    #   * patch to create src2ndesttol
    #   * rsync to run some tests
    - apk add --no-cache bash openssh patch rsync
    # prepare ssh for tests
    - ssh-keygen -A
    - /usr/sbin/sshd -e
    - ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
    - cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys
    - ssh-keyscan -H localhost >> ~/.ssh/known_hosts
    # install src2ndest, generate src2ndesttol and install src2ndesttol
    - install -p -o root -g root -m 755 src2ndest /usr/local/bin/src2ndest
    - add-on/generate_tolerate_patch
    - install -p -o root -g root -m 755 src2ndesttol /usr/local/bin/src2ndesttol
    # run tests
    - r=0; src2ndest && exit 255 || r=$?; test $r = 1
    - test/run_tests

test_debian:
  image:
    name: debian:latest
  rules:
    - changes:
      - add-on/*
      - .gitlab-ci.yml
      - src2ndest
      - test/*
  script:
    - date
    - apt-get update
    # install dependencies:
    #   * patch to create src2ndesttol
    #   * rsync to run some tests
    #   * ssh to run some tests
    - $APT_GET_INSTALL patch rsync ssh
    # prepare ssh for tests
    - mkdir /run/sshd
    - /usr/sbin/sshd -e
    - ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
    - cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys
    - ssh-keyscan -H localhost >> ~/.ssh/known_hosts
    # install src2ndest, generate src2ndesttol and install src2ndesttol
    - install -p -o root -g root -m 755 src2ndest /usr/local/bin/src2ndest
    - add-on/generate_tolerate_patch
    - install -p -o root -g root -m 755 src2ndesttol /usr/local/bin/src2ndesttol
    # run tests
    - r=0; src2ndest && exit 255 || r=$?; test $r = 1
    - test/run_tests

test_freebsd:
  tags:
    - FreeBSD-13-amd64
  rules:
    - changes:
      - add-on/*
      - .gitlab-ci.yml
      - src2ndest
      - test/*
  script:
    - date
    - pkg -v
    # install dependencies:
    #   * bash for the script
    #   * patch to create src2ndesttol
    #   * rsync to run some tests
    - pkg install -y bash patch rsync
    # prepare ssh for tests
    - ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
    - cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys
    - ssh-keyscan -H localhost >> ~/.ssh/known_hosts
    # install src2ndest, generate src2ndesttol and install src2ndesttol
    - install -p -o root -g wheel -m 755 src2ndest /usr/local/bin/src2ndest
    - add-on/generate_tolerate_patch
    - install -p -o root -g wheel -m 755 src2ndesttol /usr/local/bin/src2ndesttol
    # run tests
    - r=0; src2ndest && exit 255 || r=$?; test $r = 1
    - test/run_tests

deploy_to_github:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_SERVER_HOST == "gitlab.com"
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  needs:
    - job: pre-commit
    - job: test_alpine
    - job: test_debian
    - job: test_freebsd
  script:
    - date
    - apk add --no-cache git openssh
    - mkdir ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    - mv $github_deploy_key ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    - repopath=$(mktemp -d)
    - git clone --bare --mirror ${CI_REPOSITORY_URL} $repopath
    - (cd $repopath && git branch --list --all)
    - (cd $repopath && git for-each-ref --format 'delete %(refname)' refs/pipelines | tee >(git update-ref --stdin))
    - (cd $repopath && git branch --list --all)
    - (cd $repopath && git push --prune --mirror git@github.com:ug-cp/src2ndest.git)

deploy_to_repo:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_SERVER_HOST == "gitlab.com"
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  needs:
    - job: pre-commit
    - job: test_alpine
    - job: test_debian
    - job: test_freebsd
  script:
    - date
    - apk add --no-cache git
    - repopath=$(mktemp -d)
    - git clone --bare --mirror ${CI_REPOSITORY_URL} $repopath
    - (cd $repopath && git branch --list --all)
    - (cd $repopath && git for-each-ref --format 'delete %(refname)' refs/pipelines | tee >(git update-ref --stdin))
    - (cd $repopath && git branch --list --all)
    - (cd $repopath && git push --prune --mirror $backup_repo)
